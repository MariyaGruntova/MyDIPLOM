
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)

Если ОбменДанными.Загрузка Тогда
	Возврат;
КонецЕсли; 

ВыбранныйДоговор = Справочники.ДоговорыКонтрагентов.НайтиПоНаименованию(Договор);

Если ВыбранныйДоговор.ВидДоговора = ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание")
И Дата <= ВыбранныйДоговор.ВКМ_ДатаНачала Или Дата >= ВыбранныйДоговор.ВКМ_ДатаОкончания Тогда
	Отказ = Истина;
	Сообщение = Новый СообщениеПользователю();
	Сообщение.Текст = "Проверьте период действия договора";
	Сообщение.Сообщить();
	Возврат;		
			
ИначеЕсли ВыбранныйДоговор.ВидДоговора <> ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание") Тогда
	Отказ = Истина;
	Сообщение = Новый СообщениеПользователю();
	Сообщение.Текст = "Проверьте вид договора. Он должен быть Абонентское обслуживание";
	Сообщение.Сообщить();
	Возврат;
		
КонецЕсли;
	
	ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый());
	ОтправкаСообщенийТГ();
		
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// регистр ВКМ_ВыполненныеКлиентуРаботы
	Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина;
	Движения.ВКМ_ВыполненныеКлиентуРаботы.Записать();
	
	// регистр ВКМ_ВыполненныеСотрудникомРаботы
	Движения.ВКМ_ВыполненныеСотрудникомРаботы.Записывать = Истина;
	Движения.ВКМ_ВыполненныеСотрудникомРаботы.Записать();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ДоговорыКонтрагентов.ВКМ_СтоимостьЧасаРаботы КАК СтоимостьЧасаРаботы,
		|	СУММА(ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы.ЧасыКОплатеКлиенту) КАК ЧасыКОплатеКлиенту
		|ПОМЕСТИТЬ ВТ_ДанныеКлиента
		|ИЗ
		|	Документ.ВКМ_ОбслуживаниеКлиента.ВыполненныеРаботы КАК ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|		ПО ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы.Ссылка.Договор.Ссылка = ДоговорыКонтрагентов.Ссылка
		|ГДЕ
		|	ДоговорыКонтрагентов.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание)
		|	И НЕ ДоговорыКонтрагентов.ПометкаУдаления
		|	И ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы.Ссылка = &Ссылка
		|СГРУППИРОВАТЬ ПО
		|	ДоговорыКонтрагентов.ВКМ_СтоимостьЧасаРаботы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.ПроцентОтРабот КАК ПроцентОтРабот,
		|	ВТ_ДанныеКлиента.СтоимостьЧасаРаботы КАК СтоимостьЧасаРаботы,
		|	ВТ_ДанныеКлиента.ЧасыКОплатеКлиенту КАК ЧасыКОплатеКлиенту
		|ИЗ
		|	ВТ_ДанныеКлиента КАК ВТ_ДанныеКлиента,
		|	РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(&Период, Сотрудник = &Сотрудник) КАК
		|		ВКМ_УсловияОплатыСотрудниковСрезПоследних";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Период", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("Сотрудник", Справочники.ВКМ_ФизическиеЛица.НайтиПоНаименованию(Специалист));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		// регистр ВКМ_ВыполненныеКлиентуРаботы
		Движение = Движения.ВКМ_ВыполненныеКлиентуРаботы.Добавить();
		Движение.Период = Дата;
		Движение.Клиент = Клиент;
		Движение.Договор = Договор;
		Движение.КоличествоЧасов = Выборка.ЧасыКОплатеКлиенту;
		Движение.СуммаКОплате = Выборка.ЧасыКОплатеКлиенту * Выборка.СтоимостьЧасаРаботы;
		
		
		// регистр ВКМ_ВыполненныеСотрудникомРаботы
		Движение = Движения.ВКМ_ВыполненныеСотрудникомРаботы.Добавить();
		Движение.Период = Дата;
		Движение.Сотрудник = Специалист;
		Движение.ЧасовКОплате = Выборка.ЧасыКОплатеКлиенту;
		
		Если Выборка.ПроцентОтРабот = "" Тогда
			
			Отказ = Истина;
			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = "У сотрудника не заполнен Процент от выполненных работ";
			Сообщение.Сообщить();
			Возврат;
			
		КонецЕсли;
				
		Если Число(Выборка.ПроцентОтРабот) > 0 Тогда
			
			Движение.СуммаКОплате = Выборка.ЧасыКОплатеКлиенту * Выборка.СтоимостьЧасаРаботы * 
			Число(Выборка.ПроцентОтРабот) / 100;
			
		ИначеЕсли Число(Выборка.ПроцентОтРабот) = 0 Тогда
			
			Движение.СуммаКОплате = 0;
			
		КонецЕсли;
				
	КонецЦикла;
	
КонецПроцедуры


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОтправкаСообщенийТГ()
	
	ЭтоНовый = ДополнительныеСвойства.ЭтоНовый;
	
	Если Не ЭтоНовый Тогда
		
		ДокОбъект = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, 
		"Специалист, ДатаПроведенияРабот, ВремяНачалаРабот, ВремяОкончанияРабот");
		
		Параметры = Новый Структура();
		Параметры.Вставить("Специалист", Специалист);
		Параметры.Вставить("ДатаПроведенияРабот", ДатаПроведенияРабот);
		Параметры.Вставить("ВремяНачалаРабот", ВремяНачалаРабот);
		Параметры.Вставить("ВремяОкончанияРабот", ВремяОкончанияРабот);
		
		Если Не ОбщегоНазначения.ДанныеСовпадают(ДокОбъект, Параметры) Тогда 
			
			СправочникУведомленияТБ = Справочники.ВКМ_УведомленияТБ;
			
			НовыйСправочник = СправочникУведомленияТБ.СоздатьЭлемент();
			
			ТекстСообщения = СтрШаблон("Изменения в задании %1: ДатаПроведенияРабот %2, 
			|ВремяНачалаРабот %3, ВремяОкончанияРабот %4, Специалист %5",
			Ссылка, Формат(ДатаПроведенияРабот, "ДФ=dd.MM.yyyy;"), 
			Формат(ВремяНачалаРабот, "ДЛФ=T;"),	Формат(ВремяОкончанияРабот, "ДЛФ=T;"),
			Специалист);
			
			НовыйСправочник.Наименование = Специалист;
			НовыйСправочник.ТекстСообщения = ТекстСообщения;
			НовыйСправочник.Записать(); 
			
		КонецЕсли;
	КонецЕсли;	
		
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ЭтоНовый = ДополнительныеСвойства.ЭтоНовый;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВКМ_ОбслуживаниеКлиента.Ссылка,
	|	ВКМ_ОбслуживаниеКлиента.Специалист КАК Специалист,
	|	ВКМ_ОбслуживаниеКлиента.ДатаПроведенияРабот КАК ДатаПроведенияРабот,
	|	ВКМ_ОбслуживаниеКлиента.ВремяНачалаРабот КАК ВремяНачалаРабот,
	|	ВКМ_ОбслуживаниеКлиента.ВремяОкончанияРабот КАК ВремяОкончанияРабот
	|ИЗ
	|	Документ.ВКМ_ОбслуживаниеКлиента КАК ВКМ_ОбслуживаниеКлиента
	|ГДЕ
	|	ВКМ_ОбслуживаниеКлиента.Ссылка = &Ссылка
	|	И НЕ ВКМ_ОбслуживаниеКлиента.ПометкаУдаления
	|	И ВКМ_ОбслуживаниеКлиента.Проведен = ИСТИНА";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл 
		
		Если ЭтоНовый Тогда
			
			СправочникУведомленияТБ = Справочники.ВКМ_УведомленияТБ;
			
			НовыйСправочник = СправочникУведомленияТБ.СоздатьЭлемент();
			
			ТекстСообщения = СтрШаблон("У вас новое задание %1: ДатаПроведенияРабот %2, 
			|ВремяНачалаРабот %3, ВремяОкончанияРабот %4, Специалист %5",
			Выборка.Ссылка, Формат(Выборка.ДатаПроведенияРабот, "ДФ=dd.MM.yyyy;"), 
			Формат(Выборка.ВремяНачалаРабот, "ДЛФ=T;"),	Формат(Выборка.ВремяОкончанияРабот, "ДЛФ=T;"),
			Выборка.Специалист);
			
			НовыйСправочник.Наименование = Выборка.Специалист;
			НовыйСправочник.ТекстСообщения = ТекстСообщения;
			НовыйСправочник.Записать();
			
		Иначе
			Продолжить;					
		КонецЕсли;	
	КонецЦикла;
   
КонецПроцедуры

#КонецОбласти

#КонецЕсли
