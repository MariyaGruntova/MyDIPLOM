#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	СформироватьДвижения();
	
	РассчитатьОклад();	
	РассчитатьПремию();	
	РассчитатьОтпуск();
	РассчитатьНДФЛ();
	
	СформироватьДвиженияПоВзаиморасчетамССотрудниками();
	СформироватьДвиженияПоОтпускам();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СформироватьДвижения()
	
	СформироватьДвиженияПоОкладу();
	СформироватьДвиженияПрочиеОсновныеНачисления();
	СформироватьДвиженияДополнительныеНачисления();
			
	Движения.ВКМ_ОсновныеНачисления.Записать();
	Движения.ВКМ_ДополнительныеНачисления.Записать();
			
КонецПроцедуры

Процедура СформироватьДвиженияПоОкладу()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_НачислениеЗарплатыОсновныеНачисления.Сотрудник,
		|	ВКМ_НачислениеЗарплатыОсновныеНачисления.ГрафикРаботы,
		|	ВКМ_НачислениеЗарплатыОсновныеНачисления.ВидРасчета,
		|	ВКМ_НачислениеЗарплатыОсновныеНачисления.ДатаНачала,
		|	ВКМ_НачислениеЗарплатыОсновныеНачисления.ДатаОкончания
		|ПОМЕСТИТЬ ВТ_ИсходныеДанные
		|ИЗ
		|	Документ.ВКМ_НачислениеЗарплаты.ОсновныеНачисления КАК ВКМ_НачислениеЗарплатыОсновныеНачисления
		|ГДЕ
		|	ВКМ_НачислениеЗарплатыОсновныеНачисления.Ссылка = &Ссылка
		|	И ВКМ_НачислениеЗарплатыОсновныеНачисления.ВидРасчета = &ВидРасчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ИсходныеДанные.Сотрудник КАК Сотрудник,
		|	ВТ_ИсходныеДанные.ГрафикРаботы КАК ГрафикРаботы,
		|	ВТ_ИсходныеДанные.ВидРасчета КАК ВидРасчета,
		|	ВТ_ИсходныеДанные.ДатаНачала КАК ДатаНачала,
		|	ВТ_ИсходныеДанные.ДатаОкончания КАК ДатаОкончания,
		|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.Оклад КАК Показатель
		|ИЗ
		|	ВТ_ИсходныеДанные КАК ВТ_ИсходныеДанные
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(&Период, Сотрудник В
		|			(ВЫБРАТЬ
		|				ВКМ_НачислениеЗарплатыОсновныеНачисления.Сотрудник
		|			ИЗ
		|				Документ.ВКМ_НачислениеЗарплаты.ОсновныеНачисления КАК ВКМ_НачислениеЗарплатыОсновныеНачисления)) КАК
		|			ВКМ_УсловияОплатыСотрудниковСрезПоследних
		|		ПО ВТ_ИсходныеДанные.Сотрудник = ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	Запрос.УстановитьПараметр("Период", Дата);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
		ЗаполнитьЗначенияСвойств(Движение, Выборка);
		Движение.ПериодРегистрации = Дата;
		Движение.ВидРасчета = Выборка.ВидРасчета;
		Движение.ПериодДействияНачало = Выборка.ДатаНачала;
		Движение.ПериодДействияКонец = Выборка.ДатаОкончания;
				
	КонецЦикла;
	
КонецПроцедуры

Процедура СформироватьДвиженияПрочиеОсновныеНачисления();
	
	Для Каждого Строка Из ОсновныеНачисления Цикл
	
		Если ТипЗнч(Строка.ВидРасчета) <> Тип("ПланВидовРасчетаСсылка.ВКМ_ОсновныеНачисления") Тогда
			Продолжить;
		КонецЕсли;
		
		Если Строка.ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад Тогда
			Продолжить;
		КонецЕсли;
		
		Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
		Движение.ПериодРегистрации = Дата;
		Движение.ВидРасчета = Строка.ВидРасчета;
		Движение.ПериодДействияНачало = Строка.ДатаНачала;
		Движение.ПериодДействияКонец = Строка.ДатаОкончания;
		Движение.Сотрудник = Строка.Сотрудник;
		Движение.ГрафикРаботы = Строка.ГрафикРаботы;

		Если Строка.ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск Тогда
			Движение.БазовыйПериодНачало = НачалоМесяца(ДобавитьМесяц(Строка.ДатаНачала, -12));
			Движение.БазовыйПериодКонец = КонецМесяца(ДобавитьМесяц(Строка.ДатаОкончания, -1));
		КонецЕсли;

	КонецЦикла;
	
КонецПроцедуры	

Процедура СформироватьДвиженияДополнительныеНачисления()
			
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_НачислениеЗарплатыДополнительныеНачисления.Сотрудник,
		|	ВКМ_НачислениеЗарплатыДополнительныеНачисления.ВидРасчета,
		|	ВКМ_НачислениеЗарплатыДополнительныеНачисления.ДатаНачала,
		|	ВКМ_НачислениеЗарплатыДополнительныеНачисления.ДатаОкончания
		|ПОМЕСТИТЬ ВТ_ИсходныеДанные
		|ИЗ
		|	Документ.ВКМ_НачислениеЗарплаты.ДополнительныеНачисления КАК ВКМ_НачислениеЗарплатыДополнительныеНачисления
		|ГДЕ
		|	ВКМ_НачислениеЗарплатыДополнительныеНачисления.Ссылка = &Ссылка
		|	И ВКМ_НачислениеЗарплатыДополнительныеНачисления.ВидРасчета = &ВидРасчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ИсходныеДанные.Сотрудник КАК Сотрудник,
		|	ВТ_ИсходныеДанные.ВидРасчета КАК ВидРасчета,
		|	ВТ_ИсходныеДанные.ДатаНачала КАК ДатаНачала,
		|	ВТ_ИсходныеДанные.ДатаОкончания КАК ДатаОкончания,
		|	ЕСТЬNULL(ВКМ_УсловияОплатыСотрудниковСрезПоследних.ПроцентОтРабот, 0) КАК ПроцентОтРабот
		|ИЗ
		|	ВТ_ИсходныеДанные КАК ВТ_ИсходныеДанные
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(&Период, Сотрудник В
		|			(ВЫБРАТЬ
		|				ВКМ_НачислениеЗарплатыДополнительныеНачисления.Сотрудник
		|			ИЗ
		|				Документ.ВКМ_НачислениеЗарплаты.ДополнительныеНачисления КАК ВКМ_НачислениеЗарплатыДополнительныеНачисления)) КАК
		|			ВКМ_УсловияОплатыСотрудниковСрезПоследних
		|		ПО ВТ_ИсходныеДанные.Сотрудник = ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ВКМ_ДополнительныеНачисления.ПремияПроцентом);
	Запрос.УстановитьПараметр("Период", Дата);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.ПроцентОтРабот = "0" Тогда
			Продолжить;
		Иначе
			Движение = Движения.ВКМ_ДополнительныеНачисления.Добавить();
			Движение.ПериодРегистрации = Дата;
			Движение.ВидРасчета = Выборка.ВидРасчета;
			Движение.Сотрудник = Выборка.Сотрудник;
		КонецЕсли;
			
		Если Выборка.ВидРасчета = ПланыВидовРасчета.ВКМ_ДополнительныеНачисления.ПремияПроцентом Тогда
			
			Движение.ПроцентОплаты = Выборка.ПроцентОтРабот;
			Движение.БазовыйПериодНачало = НачалоМесяца(Дата);
			Движение.БазовыйПериодКонец = КонецМесяца(Дата);
		
		КонецЕсли;
		
	КонецЦикла;
		
КонецПроцедуры

Процедура РассчитатьОклад()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.РабочиеДниПериодДействия КАК НормаДней,
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.РабочиеДниФактическийПериодДействия КАК ФактДней
		|ИЗ
		|	РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(Регистратор = &Ссылка
		|	И ВидРасчета = &Оклад) КАК ВКМ_ОсновныеНачисленияДанныеГрафика";
	
	Запрос.УстановитьПараметр("Оклад", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Движение = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки - 1];
		
		Движение.СуммаКОплате = Движение.Показатель / Выборка.НормаДней * Выборка.ФактДней;
		Движение.ФактДней = Выборка.ФактДней;
		Движение.НормаДней = Выборка.НормаДней;
				
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать(, Истина);	
КонецПроцедуры	

Процедура РассчитатьПремию()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ЕСТЬNULL(ВКМ_ВыполненныеСотрудникомРаботыОбороты.СуммаКОплатеОборот, 0) КАК СуммаКОплате,
		|	ВКМ_ДополнительныеНачисления.НомерСтроки
		|ИЗ
		|	РегистрРасчета.ВКМ_ДополнительныеНачисления КАК ВКМ_ДополнительныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВКМ_ВыполненныеСотрудникомРаботы.Обороты(&НачалоПериода, &КонецПериода,,) КАК
		|			ВКМ_ВыполненныеСотрудникомРаботыОбороты
		|		ПО ВКМ_ДополнительныеНачисления.Сотрудник = ВКМ_ВыполненныеСотрудникомРаботыОбороты.Сотрудник";
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Дата));
		
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.СуммаКОплате = 0 Тогда
			Продолжить;
		Иначе
			Движение = Движения.ВКМ_ДополнительныеНачисления[Выборка.НомерСтроки - 1];
		
			Движение.Показатель = Выборка.СуммаКОплате;
			Движение.СуммаКОплате = Выборка.СуммаКОплате;
		КонецЕсли;
		
	КонецЦикла;
	
	Движения.ВКМ_ДополнительныеНачисления.Записать(, Истина);
	
КонецПроцедуры

Процедура РассчитатьОтпуск()

	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.НомерСтроки,
		|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.СуммаКОплатеБаза, 0) КАК СуммаКОплатеОснБаза,
		|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления.СуммаКОплатеБаза, 0) КАК СуммаКОплатеДопБаза,
		|	ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.НормаДнейБаза КАК НормаДней,
		|	РАЗНОСТЬДАТ(ВКМ_ОсновныеНачисленияДанныеГрафика.ПериодДействияНачало,
		|		ВКМ_ОсновныеНачисленияДанныеГрафика.ПериодДействияКонец, ДЕНЬ) + 1 КАК ФактДней
		|ИЗ
		|	РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ОсновныеНачисления(&Измерение, &Измерение,, Регистратор = &Ссылка
		|	И ВидРасчета = &Отпуск) КАК ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(Регистратор = &Ссылка
		|		И ВидРасчета = &Отпуск) КАК ВКМ_ОсновныеНачисленияДанныеГрафика
		|		ПО ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.Сотрудник = ВКМ_ОсновныеНачисленияДанныеГрафика.Сотрудник
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ДополнительныеНачисления(&Измерение, &Измерение,,
		|			Регистратор = &Ссылка
		|		И ВидРасчета = &Отпуск) КАК ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления
		|		ПО ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.Сотрудник = ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления.Сотрудник";
	
	Запрос.УстановитьПараметр("Отпуск", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);

	Измерение = Новый Массив;
	Измерение.Добавить("Сотрудник");
	Запрос.УстановитьПараметр("Измерение", Измерение); 
			
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Движение = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки - 1];
		
		Движение.СуммаКОплате = (Выборка.СуммаКОплатеОснБаза + Выборка.СуммаКОплатеДопБаза) / Выборка.НормаДней * Выборка.ФактДней;
		Движение.ФактДней = Выборка.ФактДней;
		Движение.НормаДней = Выборка.НормаДней;

	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать(,Истина);
КонецПроцедуры
		
Процедура РассчитатьНДФЛ()

	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_ОсновныеНачисления.Сотрудник КАК Сотрудник,
		|	СУММА(ВКМ_ОсновныеНачисления.СуммаКОплате) КАК СуммаКОплате
		|ИЗ
		|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
		|ГДЕ
		|	ВКМ_ОсновныеНачисления.Регистратор = &Ссылка
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_ОсновныеНачисления.Сотрудник
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВКМ_ДополнительныеНачисления.Сотрудник,
		|	СУММА(ВКМ_ДополнительныеНачисления.СуммаКОплате)
		|ИЗ
		|	РегистрРасчета.ВКМ_ДополнительныеНачисления КАК ВКМ_ДополнительныеНачисления
		|ГДЕ
		|	ВКМ_ДополнительныеНачисления.Регистратор = &Ссылка
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_ДополнительныеНачисления.Сотрудник";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
			
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Движение = Движения.ВКМ_Удержания.Добавить();
		
		Движение.ПериодРегистрации = Дата;
		Движение.БазовыйПериодНачало = НачалоМесяца(Дата);
		Движение.БазовыйПериодКонец = КонецМесяца(Дата);
		
		Движение.Сотрудник = Выборка.Сотрудник;
		Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_Удержания.НДФЛ;
		Движение.Показатель = 13/100;
		Движение.Результат = Окр(Выборка.СуммаКОплате * Движение.Показатель);
		
	КонецЦикла;
	
	Движения.ВКМ_Удержания.Записать();
	
КонецПроцедуры

Процедура СформироватьДвиженияПоВзаиморасчетамССотрудниками()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_ОсновныеНачисления.Сотрудник,
		|	ВКМ_ОсновныеНачисления.СуммаКОплате
		|ПОМЕСТИТЬ ВТ_ИсходныеДанные
		|ИЗ
		|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
		|ГДЕ
		|	ВКМ_ОсновныеНачисления.Регистратор = &Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВКМ_ДополнительныеНачисления.Сотрудник,
		|	ВКМ_ДополнительныеНачисления.СуммаКОплате
		|ИЗ
		|	РегистрРасчета.ВКМ_ДополнительныеНачисления КАК ВКМ_ДополнительныеНачисления
		|ГДЕ
		|	ВКМ_ДополнительныеНачисления.Регистратор = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ИсходныеДанные.Сотрудник КАК Сотрудник,
		|	СУММА(ВТ_ИсходныеДанные.СуммаКОплате) КАК СуммаКОплате
		|ПОМЕСТИТЬ ВТ_Данные
		|ИЗ
		|	ВТ_ИсходныеДанные КАК ВТ_ИсходныеДанные
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ИсходныеДанные.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Данные.Сотрудник КАК Сотрудник,
		|	ВТ_Данные.СуммаКОплате КАК СуммаКОплате,
		|	СУММА(ВКМ_Удержания.Результат) КАК НДФЛ
		|ИЗ
		|	ВТ_Данные КАК ВТ_Данные
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_Удержания КАК ВКМ_Удержания
		|		ПО ВТ_Данные.Сотрудник = ВКМ_Удержания.Сотрудник
		|ГДЕ
		|	ВКМ_Удержания.Регистратор = &Ссылка
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Данные.Сотрудник,
		|	ВТ_Данные.СуммаКОплате";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
		
	Пока Выборка.Следующий() Цикл
		
		Движения.ВКМ_ВзаиморасчетыССотрудниками.Записывать = Истина;
		Движение = Движения.ВКМ_ВзаиморасчетыССотрудниками.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Сотрудник = Выборка.Сотрудник;
		Движение.Сумма = Выборка.СуммаКОплате - Выборка.НДФЛ;
				
	КонецЦикла;
	
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записать();
	
КонецПроцедуры

Процедура СформироватьДвиженияПоОтпускам() 
	
	// регистр ВКМ_ОстаткиОтпусков Приход
	Движения.ВКМ_ОстаткиОтпусков.Записывать = Истина; 
	Движения.ВКМ_ОстаткиОтпусков.Записать();

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВКМ_ОсновныеНачисленияФактическийПериодДействия.Сотрудник КАК Сотрудник,
		|	ВКМ_ОсновныеНачисленияФактическийПериодДействия.ВидРасчета КАК ВидРасчета,
		|	СУММА(ВКМ_ОсновныеНачисленияФактическийПериодДействия.ФактДней) КАК ФактДней
		|ИЗ
		|	РегистрРасчета.ВКМ_ОсновныеНачисления.ФактическийПериодДействия КАК ВКМ_ОсновныеНачисленияФактическийПериодДействия
		|ГДЕ
		|	ВКМ_ОсновныеНачисленияФактическийПериодДействия.ВидРасчета = &ВидРасчета
		|	И ВКМ_ОсновныеНачисленияФактическийПериодДействия.Регистратор = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_ОсновныеНачисленияФактическийПериодДействия.Сотрудник,
		|	ВКМ_ОсновныеНачисленияФактическийПериодДействия.ВидРасчета";
	
	Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Движение = Движения.ВКМ_ОстаткиОтпусков.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Сотрудник = Выборка.Сотрудник;
		Движение.ДниОтпуска = Выборка.ФактДней;
		
	КонецЦикла;
	    
КонецПроцедуры

#КонецОбласти

#КонецЕсли
